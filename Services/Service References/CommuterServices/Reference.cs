//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MobileSrc.Services.CommuterServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="CommuterServices.CommuterSoap")]
    public interface CommuterSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/RegisterDevice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRegisterDevice(System.Guid deviceId, string name, bool enableTile, bool enableToast, int timeZoneOffset, string accentColor, string channelURI, CommuteDefinition[] commutes, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/Test", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTest(System.AsyncCallback callback, object asyncState);
        
        MobileSrc.Services.CommuterServices.CommuteHistory EndTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/RequestTileUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRequestTileUpdate(string channelURI, string imageURI, System.AsyncCallback callback, object asyncState);
        
        MobileSrc.Services.CommuterServices.NotificationResponse EndRequestTileUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/GetCommuteHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState);
        
        MobileSrc.Services.CommuterServices.CommuteHistory EndGetCommuteHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/ClearCommuteHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginClearCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState);
        
        MobileSrc.Services.CommuterServices.CommuteHistory EndClearCommuteHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/AddCommute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAddCommute(System.Guid deviceId, MobileSrc.Services.CommuterServices.CommuteDefinition commute, System.AsyncCallback callback, object asyncState);
        
        bool EndAddCommute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="/AddRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAddRoute(System.Guid deviceId, System.Guid commuteId, MobileSrc.Services.CommuterServices.RouteDefinition route, System.AsyncCallback callback, object asyncState);
        
        bool EndAddRoute(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class CommuteDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private bool isNewField;
        
        private RouteLocation startPointField;
        
        private RouteLocation endPointField;
        
        private RouteDefinition[] routesField;
        
        private string nameField;
        
        private System.DateTime departureTimeField;
        
        private System.DateTime returnTimeField;
        
        private int daysOfWeekField;
        
        private System.DateTime lastUpdatedField;
        
        private System.DateTime lastUpdatedRetField;
        
        private CommuteHistory historyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
                this.RaisePropertyChanged("IsNew");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RouteLocation StartPoint {
            get {
                return this.startPointField;
            }
            set {
                this.startPointField = value;
                this.RaisePropertyChanged("StartPoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RouteLocation EndPoint {
            get {
                return this.endPointField;
            }
            set {
                this.endPointField = value;
                this.RaisePropertyChanged("EndPoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public RouteDefinition[] Routes {
            get {
                return this.routesField;
            }
            set {
                this.routesField = value;
                this.RaisePropertyChanged("Routes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime DepartureTime {
            get {
                return this.departureTimeField;
            }
            set {
                this.departureTimeField = value;
                this.RaisePropertyChanged("DepartureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime ReturnTime {
            get {
                return this.returnTimeField;
            }
            set {
                this.returnTimeField = value;
                this.RaisePropertyChanged("ReturnTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int DaysOfWeek {
            get {
                return this.daysOfWeekField;
            }
            set {
                this.daysOfWeekField = value;
                this.RaisePropertyChanged("DaysOfWeek");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime LastUpdatedRet {
            get {
                return this.lastUpdatedRetField;
            }
            set {
                this.lastUpdatedRetField = value;
                this.RaisePropertyChanged("LastUpdatedRet");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public CommuteHistory History {
            get {
                return this.historyField;
            }
            set {
                this.historyField = value;
                this.RaisePropertyChanged("History");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RouteLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GpsLocation locationField;
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GpsLocation Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GpsLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double altitudeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
                this.RaisePropertyChanged("Altitude");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class NotificationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string notificationStatusField;
        
        private string subscriptionStatusField;
        
        private string deviceConnectionStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string NotificationStatus {
            get {
                return this.notificationStatusField;
            }
            set {
                this.notificationStatusField = value;
                this.RaisePropertyChanged("NotificationStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SubscriptionStatus {
            get {
                return this.subscriptionStatusField;
            }
            set {
                this.subscriptionStatusField = value;
                this.RaisePropertyChanged("SubscriptionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DeviceConnectionStatus {
            get {
                return this.deviceConnectionStatusField;
            }
            set {
                this.deviceConnectionStatusField = value;
                this.RaisePropertyChanged("DeviceConnectionStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RouteHistoryDay : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DayOfWeek dayField;
        
        private double minutesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DayOfWeek Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Minutes {
            get {
                return this.minutesField;
            }
            set {
                this.minutesField = value;
                this.RaisePropertyChanged("Minutes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    public enum DayOfWeek {
        
        /// <remarks/>
        Sunday,
        
        /// <remarks/>
        Monday,
        
        /// <remarks/>
        Tuesday,
        
        /// <remarks/>
        Wednesday,
        
        /// <remarks/>
        Thursday,
        
        /// <remarks/>
        Friday,
        
        /// <remarks/>
        Saturday,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RouteHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid routeIdField;
        
        private RouteHistoryDay[] departureAveragesField;
        
        private RouteHistoryDay[] returnAveragesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid RouteId {
            get {
                return this.routeIdField;
            }
            set {
                this.routeIdField = value;
                this.RaisePropertyChanged("RouteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public RouteHistoryDay[] DepartureAverages {
            get {
                return this.departureAveragesField;
            }
            set {
                this.departureAveragesField = value;
                this.RaisePropertyChanged("DepartureAverages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public RouteHistoryDay[] ReturnAverages {
            get {
                return this.returnAveragesField;
            }
            set {
                this.returnAveragesField = value;
                this.RaisePropertyChanged("ReturnAverages");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class CommuteHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RouteHistory[] routesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public RouteHistory[] Routes {
            get {
                return this.routesField;
            }
            set {
                this.routesField = value;
                this.RaisePropertyChanged("Routes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class TimeSpan : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RouteDirection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
                this.RaisePropertyChanged("Action");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RouteDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private RouteLocation[] wayPointsField;
        
        private GpsLocation[] routePointsField;
        
        private RouteDirection[] directionsField;
        
        private string nameField;
        
        private RouteAvoid avoidanceMeasuresField;
        
        private TimeSpan estimatedDurationField;
        
        private double estimatedDurationMinutesField;
        
        private double estimatedDistanceField;
        
        private TimeSpan estimatedRetDurationField;
        
        private double estimatedDurationRetMinutesField;
        
        private double estimatedRetDistanceField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public RouteLocation[] WayPoints {
            get {
                return this.wayPointsField;
            }
            set {
                this.wayPointsField = value;
                this.RaisePropertyChanged("WayPoints");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public GpsLocation[] RoutePoints {
            get {
                return this.routePointsField;
            }
            set {
                this.routePointsField = value;
                this.RaisePropertyChanged("RoutePoints");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public RouteDirection[] Directions {
            get {
                return this.directionsField;
            }
            set {
                this.directionsField = value;
                this.RaisePropertyChanged("Directions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public RouteAvoid AvoidanceMeasures {
            get {
                return this.avoidanceMeasuresField;
            }
            set {
                this.avoidanceMeasuresField = value;
                this.RaisePropertyChanged("AvoidanceMeasures");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public TimeSpan EstimatedDuration {
            get {
                return this.estimatedDurationField;
            }
            set {
                this.estimatedDurationField = value;
                this.RaisePropertyChanged("EstimatedDuration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double EstimatedDurationMinutes {
            get {
                return this.estimatedDurationMinutesField;
            }
            set {
                this.estimatedDurationMinutesField = value;
                this.RaisePropertyChanged("EstimatedDurationMinutes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double EstimatedDistance {
            get {
                return this.estimatedDistanceField;
            }
            set {
                this.estimatedDistanceField = value;
                this.RaisePropertyChanged("EstimatedDistance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public TimeSpan EstimatedRetDuration {
            get {
                return this.estimatedRetDurationField;
            }
            set {
                this.estimatedRetDurationField = value;
                this.RaisePropertyChanged("EstimatedRetDuration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double EstimatedDurationRetMinutes {
            get {
                return this.estimatedDurationRetMinutesField;
            }
            set {
                this.estimatedDurationRetMinutesField = value;
                this.RaisePropertyChanged("EstimatedDurationRetMinutes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public double EstimatedRetDistance {
            get {
                return this.estimatedRetDistanceField;
            }
            set {
                this.estimatedRetDistanceField = value;
                this.RaisePropertyChanged("EstimatedRetDistance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    public enum RouteAvoid {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AvoidHighways,
        
        /// <remarks/>
        AvoidTolls,
        
        /// <remarks/>
        MinimizeHighways,
        
        /// <remarks/>
        MinimizeTolls,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommuterSoapChannel : MobileSrc.Services.CommuterServices.CommuterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MobileSrc.Services.CommuterServices.CommuteHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MobileSrc.Services.CommuterServices.CommuteHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestTileUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestTileUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MobileSrc.Services.CommuterServices.NotificationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MobileSrc.Services.CommuterServices.NotificationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommuteHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommuteHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MobileSrc.Services.CommuterServices.CommuteHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MobileSrc.Services.CommuterServices.CommuteHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearCommuteHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearCommuteHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MobileSrc.Services.CommuterServices.CommuteHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MobileSrc.Services.CommuterServices.CommuteHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCommuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCommuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommuterSoapClient : System.ServiceModel.ClientBase<MobileSrc.Services.CommuterServices.CommuterSoap>, MobileSrc.Services.CommuterServices.CommuterSoap {
        
        private BeginOperationDelegate onBeginRegisterDeviceDelegate;
        
        private EndOperationDelegate onEndRegisterDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestDelegate;
        
        private EndOperationDelegate onEndTestDelegate;
        
        private System.Threading.SendOrPostCallback onTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestTileUpdateDelegate;
        
        private EndOperationDelegate onEndRequestTileUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onRequestTileUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommuteHistoryDelegate;
        
        private EndOperationDelegate onEndGetCommuteHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommuteHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearCommuteHistoryDelegate;
        
        private EndOperationDelegate onEndClearCommuteHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onClearCommuteHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCommuteDelegate;
        
        private EndOperationDelegate onEndAddCommuteDelegate;
        
        private System.Threading.SendOrPostCallback onAddCommuteCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddRouteDelegate;
        
        private EndOperationDelegate onEndAddRouteDelegate;
        
        private System.Threading.SendOrPostCallback onAddRouteCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CommuterSoapClient() {
        }
        
        public CommuterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommuterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommuterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommuterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RegisterDeviceCompletedEventArgs> RegisterDeviceCompleted;
        
        public event System.EventHandler<TestCompletedEventArgs> TestCompleted;
        
        public event System.EventHandler<RequestTileUpdateCompletedEventArgs> RequestTileUpdateCompleted;
        
        public event System.EventHandler<GetCommuteHistoryCompletedEventArgs> GetCommuteHistoryCompleted;
        
        public event System.EventHandler<ClearCommuteHistoryCompletedEventArgs> ClearCommuteHistoryCompleted;
        
        public event System.EventHandler<AddCommuteCompletedEventArgs> AddCommuteCompleted;
        
        public event System.EventHandler<AddRouteCompletedEventArgs> AddRouteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginRegisterDevice(System.Guid deviceId, string name, bool enableTile, bool enableToast, int timeZoneOffset, string accentColor, string channelURI, CommuteDefinition[] commutes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterDevice(deviceId, name, enableTile, enableToast, timeZoneOffset, accentColor, channelURI, commutes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MobileSrc.Services.CommuterServices.CommuterSoap.EndRegisterDevice(System.IAsyncResult result) {
            return base.Channel.EndRegisterDevice(result);
        }
        
        private System.IAsyncResult OnBeginRegisterDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deviceId = ((System.Guid)(inValues[0]));
            string name = ((string)(inValues[1]));
            bool enableTile = ((bool)(inValues[2]));
            bool enableToast = ((bool)(inValues[3]));
            int timeZoneOffset = ((int)(inValues[4]));
            string accentColor = ((string)(inValues[5]));
            string channelURI = ((string)(inValues[6]));
            CommuteDefinition[] commutes = ((CommuteDefinition[])(inValues[7]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginRegisterDevice(deviceId, name, enableTile, enableToast, timeZoneOffset, accentColor, channelURI, commutes, callback, asyncState);
        }
        
        private object[] OnEndRegisterDevice(System.IAsyncResult result) {
            bool retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndRegisterDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterDeviceCompleted(object state) {
            if ((this.RegisterDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterDeviceCompleted(this, new RegisterDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterDeviceAsync(System.Guid deviceId, string name, bool enableTile, bool enableToast, int timeZoneOffset, string accentColor, string channelURI, CommuteDefinition[] commutes) {
            this.RegisterDeviceAsync(deviceId, name, enableTile, enableToast, timeZoneOffset, accentColor, channelURI, commutes, null);
        }
        
        public void RegisterDeviceAsync(System.Guid deviceId, string name, bool enableTile, bool enableToast, int timeZoneOffset, string accentColor, string channelURI, CommuteDefinition[] commutes, object userState) {
            if ((this.onBeginRegisterDeviceDelegate == null)) {
                this.onBeginRegisterDeviceDelegate = new BeginOperationDelegate(this.OnBeginRegisterDevice);
            }
            if ((this.onEndRegisterDeviceDelegate == null)) {
                this.onEndRegisterDeviceDelegate = new EndOperationDelegate(this.OnEndRegisterDevice);
            }
            if ((this.onRegisterDeviceCompletedDelegate == null)) {
                this.onRegisterDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDeviceDelegate, new object[] {
                        deviceId,
                        name,
                        enableTile,
                        enableToast,
                        timeZoneOffset,
                        accentColor,
                        channelURI,
                        commutes}, this.onEndRegisterDeviceDelegate, this.onRegisterDeviceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginTest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MobileSrc.Services.CommuterServices.CommuteHistory MobileSrc.Services.CommuterServices.CommuterSoap.EndTest(System.IAsyncResult result) {
            return base.Channel.EndTest(result);
        }
        
        private System.IAsyncResult OnBeginTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginTest(callback, asyncState);
        }
        
        private object[] OnEndTest(System.IAsyncResult result) {
            MobileSrc.Services.CommuterServices.CommuteHistory retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestCompleted(object state) {
            if ((this.TestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestCompleted(this, new TestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        public void TestAsync(object userState) {
            if ((this.onBeginTestDelegate == null)) {
                this.onBeginTestDelegate = new BeginOperationDelegate(this.OnBeginTest);
            }
            if ((this.onEndTestDelegate == null)) {
                this.onEndTestDelegate = new EndOperationDelegate(this.OnEndTest);
            }
            if ((this.onTestCompletedDelegate == null)) {
                this.onTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCompleted);
            }
            base.InvokeAsync(this.onBeginTestDelegate, null, this.onEndTestDelegate, this.onTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginRequestTileUpdate(string channelURI, string imageURI, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestTileUpdate(channelURI, imageURI, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MobileSrc.Services.CommuterServices.NotificationResponse MobileSrc.Services.CommuterServices.CommuterSoap.EndRequestTileUpdate(System.IAsyncResult result) {
            return base.Channel.EndRequestTileUpdate(result);
        }
        
        private System.IAsyncResult OnBeginRequestTileUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string channelURI = ((string)(inValues[0]));
            string imageURI = ((string)(inValues[1]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginRequestTileUpdate(channelURI, imageURI, callback, asyncState);
        }
        
        private object[] OnEndRequestTileUpdate(System.IAsyncResult result) {
            MobileSrc.Services.CommuterServices.NotificationResponse retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndRequestTileUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestTileUpdateCompleted(object state) {
            if ((this.RequestTileUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestTileUpdateCompleted(this, new RequestTileUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestTileUpdateAsync(string channelURI, string imageURI) {
            this.RequestTileUpdateAsync(channelURI, imageURI, null);
        }
        
        public void RequestTileUpdateAsync(string channelURI, string imageURI, object userState) {
            if ((this.onBeginRequestTileUpdateDelegate == null)) {
                this.onBeginRequestTileUpdateDelegate = new BeginOperationDelegate(this.OnBeginRequestTileUpdate);
            }
            if ((this.onEndRequestTileUpdateDelegate == null)) {
                this.onEndRequestTileUpdateDelegate = new EndOperationDelegate(this.OnEndRequestTileUpdate);
            }
            if ((this.onRequestTileUpdateCompletedDelegate == null)) {
                this.onRequestTileUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestTileUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginRequestTileUpdateDelegate, new object[] {
                        channelURI,
                        imageURI}, this.onEndRequestTileUpdateDelegate, this.onRequestTileUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginGetCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommuteHistory(deviceId, commuteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MobileSrc.Services.CommuterServices.CommuteHistory MobileSrc.Services.CommuterServices.CommuterSoap.EndGetCommuteHistory(System.IAsyncResult result) {
            return base.Channel.EndGetCommuteHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetCommuteHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deviceId = ((System.Guid)(inValues[0]));
            System.Guid commuteId = ((System.Guid)(inValues[1]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginGetCommuteHistory(deviceId, commuteId, callback, asyncState);
        }
        
        private object[] OnEndGetCommuteHistory(System.IAsyncResult result) {
            MobileSrc.Services.CommuterServices.CommuteHistory retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndGetCommuteHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommuteHistoryCompleted(object state) {
            if ((this.GetCommuteHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommuteHistoryCompleted(this, new GetCommuteHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommuteHistoryAsync(System.Guid deviceId, System.Guid commuteId) {
            this.GetCommuteHistoryAsync(deviceId, commuteId, null);
        }
        
        public void GetCommuteHistoryAsync(System.Guid deviceId, System.Guid commuteId, object userState) {
            if ((this.onBeginGetCommuteHistoryDelegate == null)) {
                this.onBeginGetCommuteHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetCommuteHistory);
            }
            if ((this.onEndGetCommuteHistoryDelegate == null)) {
                this.onEndGetCommuteHistoryDelegate = new EndOperationDelegate(this.OnEndGetCommuteHistory);
            }
            if ((this.onGetCommuteHistoryCompletedDelegate == null)) {
                this.onGetCommuteHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommuteHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommuteHistoryDelegate, new object[] {
                        deviceId,
                        commuteId}, this.onEndGetCommuteHistoryDelegate, this.onGetCommuteHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginClearCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearCommuteHistory(deviceId, commuteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MobileSrc.Services.CommuterServices.CommuteHistory MobileSrc.Services.CommuterServices.CommuterSoap.EndClearCommuteHistory(System.IAsyncResult result) {
            return base.Channel.EndClearCommuteHistory(result);
        }
        
        private System.IAsyncResult OnBeginClearCommuteHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deviceId = ((System.Guid)(inValues[0]));
            System.Guid commuteId = ((System.Guid)(inValues[1]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginClearCommuteHistory(deviceId, commuteId, callback, asyncState);
        }
        
        private object[] OnEndClearCommuteHistory(System.IAsyncResult result) {
            MobileSrc.Services.CommuterServices.CommuteHistory retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndClearCommuteHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearCommuteHistoryCompleted(object state) {
            if ((this.ClearCommuteHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearCommuteHistoryCompleted(this, new ClearCommuteHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearCommuteHistoryAsync(System.Guid deviceId, System.Guid commuteId) {
            this.ClearCommuteHistoryAsync(deviceId, commuteId, null);
        }
        
        public void ClearCommuteHistoryAsync(System.Guid deviceId, System.Guid commuteId, object userState) {
            if ((this.onBeginClearCommuteHistoryDelegate == null)) {
                this.onBeginClearCommuteHistoryDelegate = new BeginOperationDelegate(this.OnBeginClearCommuteHistory);
            }
            if ((this.onEndClearCommuteHistoryDelegate == null)) {
                this.onEndClearCommuteHistoryDelegate = new EndOperationDelegate(this.OnEndClearCommuteHistory);
            }
            if ((this.onClearCommuteHistoryCompletedDelegate == null)) {
                this.onClearCommuteHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearCommuteHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginClearCommuteHistoryDelegate, new object[] {
                        deviceId,
                        commuteId}, this.onEndClearCommuteHistoryDelegate, this.onClearCommuteHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginAddCommute(System.Guid deviceId, MobileSrc.Services.CommuterServices.CommuteDefinition commute, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddCommute(deviceId, commute, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MobileSrc.Services.CommuterServices.CommuterSoap.EndAddCommute(System.IAsyncResult result) {
            return base.Channel.EndAddCommute(result);
        }
        
        private System.IAsyncResult OnBeginAddCommute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deviceId = ((System.Guid)(inValues[0]));
            MobileSrc.Services.CommuterServices.CommuteDefinition commute = ((MobileSrc.Services.CommuterServices.CommuteDefinition)(inValues[1]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginAddCommute(deviceId, commute, callback, asyncState);
        }
        
        private object[] OnEndAddCommute(System.IAsyncResult result) {
            bool retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndAddCommute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCommuteCompleted(object state) {
            if ((this.AddCommuteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCommuteCompleted(this, new AddCommuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCommuteAsync(System.Guid deviceId, MobileSrc.Services.CommuterServices.CommuteDefinition commute) {
            this.AddCommuteAsync(deviceId, commute, null);
        }
        
        public void AddCommuteAsync(System.Guid deviceId, MobileSrc.Services.CommuterServices.CommuteDefinition commute, object userState) {
            if ((this.onBeginAddCommuteDelegate == null)) {
                this.onBeginAddCommuteDelegate = new BeginOperationDelegate(this.OnBeginAddCommute);
            }
            if ((this.onEndAddCommuteDelegate == null)) {
                this.onEndAddCommuteDelegate = new EndOperationDelegate(this.OnEndAddCommute);
            }
            if ((this.onAddCommuteCompletedDelegate == null)) {
                this.onAddCommuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCommuteCompleted);
            }
            base.InvokeAsync(this.onBeginAddCommuteDelegate, new object[] {
                        deviceId,
                        commute}, this.onEndAddCommuteDelegate, this.onAddCommuteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MobileSrc.Services.CommuterServices.CommuterSoap.BeginAddRoute(System.Guid deviceId, System.Guid commuteId, MobileSrc.Services.CommuterServices.RouteDefinition route, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddRoute(deviceId, commuteId, route, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MobileSrc.Services.CommuterServices.CommuterSoap.EndAddRoute(System.IAsyncResult result) {
            return base.Channel.EndAddRoute(result);
        }
        
        private System.IAsyncResult OnBeginAddRoute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deviceId = ((System.Guid)(inValues[0]));
            System.Guid commuteId = ((System.Guid)(inValues[1]));
            MobileSrc.Services.CommuterServices.RouteDefinition route = ((MobileSrc.Services.CommuterServices.RouteDefinition)(inValues[2]));
            return ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).BeginAddRoute(deviceId, commuteId, route, callback, asyncState);
        }
        
        private object[] OnEndAddRoute(System.IAsyncResult result) {
            bool retVal = ((MobileSrc.Services.CommuterServices.CommuterSoap)(this)).EndAddRoute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddRouteCompleted(object state) {
            if ((this.AddRouteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddRouteCompleted(this, new AddRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddRouteAsync(System.Guid deviceId, System.Guid commuteId, MobileSrc.Services.CommuterServices.RouteDefinition route) {
            this.AddRouteAsync(deviceId, commuteId, route, null);
        }
        
        public void AddRouteAsync(System.Guid deviceId, System.Guid commuteId, MobileSrc.Services.CommuterServices.RouteDefinition route, object userState) {
            if ((this.onBeginAddRouteDelegate == null)) {
                this.onBeginAddRouteDelegate = new BeginOperationDelegate(this.OnBeginAddRoute);
            }
            if ((this.onEndAddRouteDelegate == null)) {
                this.onEndAddRouteDelegate = new EndOperationDelegate(this.OnEndAddRoute);
            }
            if ((this.onAddRouteCompletedDelegate == null)) {
                this.onAddRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddRouteCompleted);
            }
            base.InvokeAsync(this.onBeginAddRouteDelegate, new object[] {
                        deviceId,
                        commuteId,
                        route}, this.onEndAddRouteDelegate, this.onAddRouteCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MobileSrc.Services.CommuterServices.CommuterSoap CreateChannel() {
            return new CommuterSoapClientChannel(this);
        }
        
        private class CommuterSoapClientChannel : ChannelBase<MobileSrc.Services.CommuterServices.CommuterSoap>, MobileSrc.Services.CommuterServices.CommuterSoap {
            
            public CommuterSoapClientChannel(System.ServiceModel.ClientBase<MobileSrc.Services.CommuterServices.CommuterSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegisterDevice(System.Guid deviceId, string name, bool enableTile, bool enableToast, int timeZoneOffset, string accentColor, string channelURI, CommuteDefinition[] commutes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = deviceId;
                _args[1] = name;
                _args[2] = enableTile;
                _args[3] = enableToast;
                _args[4] = timeZoneOffset;
                _args[5] = accentColor;
                _args[6] = channelURI;
                _args[7] = commutes;
                System.IAsyncResult _result = base.BeginInvoke("RegisterDevice", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRegisterDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RegisterDevice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTest(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Test", _args, callback, asyncState);
                return _result;
            }
            
            public MobileSrc.Services.CommuterServices.CommuteHistory EndTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                MobileSrc.Services.CommuterServices.CommuteHistory _result = ((MobileSrc.Services.CommuterServices.CommuteHistory)(base.EndInvoke("Test", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestTileUpdate(string channelURI, string imageURI, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = channelURI;
                _args[1] = imageURI;
                System.IAsyncResult _result = base.BeginInvoke("RequestTileUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public MobileSrc.Services.CommuterServices.NotificationResponse EndRequestTileUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                MobileSrc.Services.CommuterServices.NotificationResponse _result = ((MobileSrc.Services.CommuterServices.NotificationResponse)(base.EndInvoke("RequestTileUpdate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = deviceId;
                _args[1] = commuteId;
                System.IAsyncResult _result = base.BeginInvoke("GetCommuteHistory", _args, callback, asyncState);
                return _result;
            }
            
            public MobileSrc.Services.CommuterServices.CommuteHistory EndGetCommuteHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                MobileSrc.Services.CommuterServices.CommuteHistory _result = ((MobileSrc.Services.CommuterServices.CommuteHistory)(base.EndInvoke("GetCommuteHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearCommuteHistory(System.Guid deviceId, System.Guid commuteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = deviceId;
                _args[1] = commuteId;
                System.IAsyncResult _result = base.BeginInvoke("ClearCommuteHistory", _args, callback, asyncState);
                return _result;
            }
            
            public MobileSrc.Services.CommuterServices.CommuteHistory EndClearCommuteHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                MobileSrc.Services.CommuterServices.CommuteHistory _result = ((MobileSrc.Services.CommuterServices.CommuteHistory)(base.EndInvoke("ClearCommuteHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddCommute(System.Guid deviceId, MobileSrc.Services.CommuterServices.CommuteDefinition commute, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = deviceId;
                _args[1] = commute;
                System.IAsyncResult _result = base.BeginInvoke("AddCommute", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddCommute(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddCommute", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddRoute(System.Guid deviceId, System.Guid commuteId, MobileSrc.Services.CommuterServices.RouteDefinition route, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = deviceId;
                _args[1] = commuteId;
                _args[2] = route;
                System.IAsyncResult _result = base.BeginInvoke("AddRoute", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddRoute(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddRoute", _args, result)));
                return _result;
            }
        }
    }
}
